name: Build Vanilla Mod

on: workflow_call

env:
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    name: Vanilla OpenHack
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Ninja
      shell: bash
      run: |
        curl -L https://github.com/ninja-build/ninja/releases/latest/download/ninja-win.zip -o ninja.zip
        7z x ninja.zip -o"$GITHUB_WORKSPACE/ninja"
        echo "$GITHUB_WORKSPACE/ninja" >> $GITHUB_PATH

    - name: Update LLVM
      shell: bash
      run: |
        curl -L https://github.com/llvm/llvm-project/releases/download/llvmorg-17.0.6/LLVM-17.0.6-win64.exe -o llvm-inst.exe
        7z x llvm-inst.exe -ollvm bin/clang.exe bin/clang++.exe bin/lld-link.exe bin/llvm-rc.exe bin/*.dll lib/clang/*/include/*
        echo "$GITHUB_WORKSPACE/llvm/bin" >> $GITHUB_PATH

    - name: Configure CMake and build
      id: build
      shell: bash
      run: |
        mkdir -p $HOME/.sccache
        export CFLAGS="--target=i686-windows-msvc"
        export CXXFLAGS="--target=i686-windows-msvc"
        export LDFLAGS="--target=i686-windows-msvc"
        cmake -B build -DBUILD_GEODE=OFF -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang
        cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with:
        name: OpenHack-Standalone
        path: ${{github.workspace}}/bin
